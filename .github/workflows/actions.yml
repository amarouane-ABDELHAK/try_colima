name: CI/CD üöÄ

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        description: Environment to deploy to
      DEPLOY_AUTH:
        type: boolean
        required: true
        default: true
        description: DEPLOY_AUTH
      DEPLOY_BACKEND:
        type: boolean
        required: true
        default: true
        description: DEPLOY_BACKEND
      DEPLOY_DATA_AIRFLOW:
        type: boolean
        required: true
        default: true
        description: DEPLOY_DATA_AIRFLOW
      DEPLOY_FEATURES_API:
        type: boolean
        required: true
        default: false
        description: DEPLOY_FEATURES_API
      DEPLOY_ROUTES:
        type: boolean
        required: true
        default: false
        description: DEPLOY_ROUTES
      DEPLOY_SM2A:
        type: boolean
        required: true
        default: true
        description: DEPLOY_SM2A
      DEPLOY_MONITORING:
        type: boolean
        required: true
        default: false
        description: DEPLOY_MONITORING

concurrency:
  group: ${{ inputs.environment }}
  cancel-in-progress: true

run-name: Deploy to ${{ inputs.environment }} environment by @${{ github.actor }}

jobs:
  check-environment:
    runs-on: ubuntu-latest
    name: Got ${{ github.event.inputs.environment }}
    steps:
      - name: Validation
        uses: trstringer/manual-approval@v1
        if: ${{ github.event.inputs.environment == 'ghgc-mcp-production-blue' }}
        timeout-minutes: 60 // The approver will have 1 hour to approve this request
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: amarouane-ABDELHAK,slesaad
          minimum-approvals: 1
          issue-title: "Deploying to GHG production"
          issue-body: "Please approve or deny the deployment"

  deploy-veda-auth:
    name: Deploy VEDA auth üîê
    runs-on: ubuntu-latest
    needs: check-environment
    env:
      DIRECTORY: veda-auth
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    environment: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.DEPLOY_AUTH == 'true' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"
          submodules: "false"

      - name: Run auth deployment
        id: deploy_auth_stack
        shell: bash
        run: echo "Deploying VEDA AUTH"


  deploy-veda-backend:
    name: Deploy VEDA backend ‚öôÔ∏è
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-backend
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    needs: [deploy-veda-auth]
    if: ${{ github.event.inputs.DEPLOY_BACKEND == 'true' }}
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"
          submodules: "false"

      - name: Run backend deployment
        id: deploy_backend_stack
        shell: bash
        run: echo "Deploying VEDA BACKEND"


  deploy-veda-data-airflow:
    name: deploy VEDA data airflow üçÉ
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-data-airflow
      AWS_REGION: "us-west-2"
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    needs: [deploy-veda-auth, deploy-veda-backend]
    if: ${{ github.event.inputs.DEPLOY_DATA_AIRFLOW == 'true' }}
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"
          submodules: "false"


      - name: Run deploy-veda-data-airflow deployment
        id: deploy-veda-data-airflow
        shell: bash
        run: echo "Deploying VEDA deploy-veda-data-airflow"


  deploy-veda-data-airflow-sm2a:
    name: deploy VEDA data airflow SM2A üõ∏
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-data-airflow
      AWS_REGION: "us-west-2"
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.DEPLOY_SM2A == 'true' }}
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"
          submodules: "false"


      - name: Run deploy-veda-data-airflow-sm2a deployment
        id: deploy-veda-data-airflow-sm2a
        shell: bash
        run: echo "Deploying VEDA deploy-veda-data-airflow-sm2aw"

    outputs:
      workflows_sm2a_api_value: dfff

  deploy-veda-features-api:
    name: Deploy VEDA features-api üó∫Ô∏è
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: ${{ github.event.inputs.DEPLOY_FEATURES_API == 'true' }}
    env:
      DIRECTORY: veda-features-api-cdk
      ENVIRONMENT: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"
          submodules: "false"

      - name: Run deploy-veda-features-api deployment
        id: deploy-veda-features-api
        shell: bash
        run: echo "Deploying VEDA deploy-veda-features-api"

    outputs:
      features_api_stack_name: cecec

  deploy-veda-monitoring:
    name: deploy VEDA monitoring üëÅÔ∏è
    runs-on: ubuntu-latest
    env:
      DIRECTORY: veda-monitoring
      AWS_REGION: "us-west-2"
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      GH_PAT_CHECK: ${{ secrets.GH_PAT }}
    if: ${{ github.event.inputs.DEPLOY_MONITORING == 'true' }}
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        if: ${{ env.GH_PAT_CHECK != '' }}
        uses: actions/checkout@v4
        with:
          lfs: "true"
          submodules: "false"

      - name: Run deploy-veda-monitoring deployment
        id: deploy-veda-monitoring
        shell: bash
        run: |
          echo "Deploying VEDA deploy-veda-monitoring"
          echo ${{ github.event.inputs.DEPLOY_MONITORING }}

  